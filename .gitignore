### Node dependencies and build output
node_modules/
build/
dist/
coverage/
.next/
.nuxt/
.vite/
out/

### Environment and secrets
*.env
*.env.*
!*.env.example
.env.local
.env.development.local
.env.test.local
.env.production.local

### API Keys and Secrets (extra protection)
config/keys.js
config/prod.js
secrets.json
credentials.json
**/config/database.js
**/config/keys.json

### Specific sensitive files for this project
server/.env*
client/.env*
!server/.env.example
!client/.env.example

### Logs and runtime files
logs/
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*
.pnpm-debug.log*

### Runtime data
pids
*.pid
*.seed
*.pid.lock

### Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

### Coverage directory used by tools like istanbul
coverage/
*.lcov

### nyc test coverage
.nyc_output

### Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

### Bower dependency directory (https://bower.io/)
bower_components

### node-waf configuration
.lock-wscript

### Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

### Dependency directories
jspm_packages/

### Snowpack dependency directory (https://snowpack.dev/)
web_modules/

### TypeScript cache
*.tsbuildinfo

### Optional npm cache directory
.npm

### Optional eslint cache
.eslintcache

### Optional stylelint cache
.stylelintcache

### Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

### Optional REPL history
.node_repl_history

### Output of 'npm pack'
*.tgz

### Yarn Integrity file
.yarn-integrity

### parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

### Next.js build output
.next
out

### Nuxt.js build / generate output
.nuxt
dist

### Gatsby files
.cache/
# Don't ignore source public folders, only build output
# public/  # REMOVED - this was ignoring client/public which we need!

### Build output public directories (framework-specific)
# Gatsby build output
/public/
# Next.js static export
/out/

### Storybook build outputs
.out
.storybook-out
storybook-static

### Temporary folders
tmp/
temp/

### OS and IDE files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
.vscode/
.vscode/settings.json
.idea/
.history/
.localhistory/
*.swp
*.swo
*.tmp

### Uploads and generated files
uploads/
public/uploads/
# Note: client/public/ should NOT be ignored - it contains essential React app files
# Only ignore uploads subdirectories and build outputs
server/uploads/
static/uploads/
media/
files/
temp-uploads/

# Build-generated public directories (not source public folders)
dist/public/
build/public/

### Database files
*.sqlite
*.sqlite3
*.db

### MongoDB dumps
dump/
mongodump/

### Redis dumps
dump.rdb

### Generated documentation
docs/_build/
docs/build/

### Testing
test-results/
playwright-report/
test-results.xml

### Docker
.dockerignore
docker-compose.override.yml

### GitHub Actions (keep workflows, ignore runs)
# Keep these files (don't ignore):
# .github/workflows/
# .github/ISSUE_TEMPLATE/
# .github/PULL_REQUEST_TEMPLATE.md
# .github/CODEOWNERS

# Ignore temporary GitHub files
.github/.DS_Store
.github/Thumbs.db

### Terraform
*.tfstate
*.tfstate.*
.terraform/
.terraform.lock.hcl

### AWS
.aws/

### Certificates and keys (be extra careful with these)
*.pem
*.key
*.crt
*.cert
*.p12
*.pfx

### Backup files
*.backup
*.bak
*.old

### Package manager lock files (optional - uncomment if you want to ignore them)
# package-lock.json
# yarn.lock
# pnpm-lock.yaml

### Local development files
.local
.env.development
local.json

### Build artifacts
*.tar.gz
*.zip
*.rar

### Misc temporary files
.sass-cache/
.connect.lock
.grunt-connect
.lock
Pipfile.lock


