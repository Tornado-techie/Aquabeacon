name: Deploy to Production

on:
  push:
    branches: [ main ]

jobs:
  # Deploy Backend to Render
  deploy-backend:
    name: Deploy Backend
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Deploy to Render
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"
        
      - name: Wait for deployment
        run: sleep 60
        
      - name: Health check
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://aquabeacon-api.render.com/health)
          if [ $response -eq 200 ]; then
            echo "‚úÖ Backend deployment successful"
          else
            echo "‚ùå Backend deployment failed - Health check returned $response"
            exit 1
          fi

  # Deploy Frontend to Vercel
  deploy-frontend:
    name: Deploy Frontend
    runs-on: ubuntu-latest
    needs: deploy-backend  # Wait for backend to be ready
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: client/package-lock.json
      
      - name: Install dependencies
        run: |
          cd client
          npm ci
      
      - name: Build frontend
        run: |
          cd client
          npm run build
        env:
          VITE_API_URL: https://aquabeacon-api.render.com/api
          VITE_APP_NAME: AquaBeacon
          VITE_ENVIRONMENT: production
      
      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          working-directory: ./client
          vercel-args: '--prod'

  # Post-deployment checks
  post-deployment:
    name: Post-Deployment Checks
    runs-on: ubuntu-latest
    needs: [deploy-backend, deploy-frontend]
    
    steps:
      - name: Test API endpoints
        run: |
          # Test public endpoints
          echo "Testing complaint submission endpoint..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://aquabeacon-api.render.com/api/complaints)
          if [ $response -eq 405 ] || [ $response -eq 200 ]; then
            echo "‚úÖ Complaints endpoint accessible"
          else
            echo "‚ùå Complaints endpoint failed - returned $response"
          fi
          
          echo "Testing authentication endpoint..."
          response=$(curl -s -o /dev/null -w "%{http_code}" https://aquabeacon-api.render.com/api/auth/login)
          if [ $response -eq 405 ] || [ $response -eq 200 ]; then
            echo "‚úÖ Auth endpoint accessible"
          else
            echo "‚ùå Auth endpoint failed - returned $response"
          fi
      
      - name: Test frontend
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://aquabeacon.vercel.app)
          if [ $response -eq 200 ]; then
            echo "‚úÖ Frontend accessible"
          else
            echo "‚ùå Frontend failed - returned $response"
            exit 1
          fi
      
      - name: Notify deployment success
        if: success()
        run: |
          echo "üéâ AquaBeacon successfully deployed!"
          echo "Frontend: https://aquabeacon.vercel.app"
          echo "Backend: https://aquabeacon-api.render.com"